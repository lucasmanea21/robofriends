{"version":3,"sources":["reportWebVitals.js","components/Card.js","components/CardList.js","components/SearchBox.js","components/Scroll.js","components/ErrorBoundry.js","containers/App.js","index.js"],"names":["reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","Card","name","email","id","className","src","alt","CardList","robots","map","user","i","SearchBox","searchfield","searchChange","type","placeholder","onChange","Scroll","props","style","overflowY","height","border","children","ErrorBoundry","state","hasError","error","info","this","setState","Component","App","onSearchChange","event","target","value","fetch","response","json","users","filteredRobots","filter","robot","toLowerCase","includes","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"gMAYeA,G,MAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,Q,mCCOCQ,EAZF,SAAC,GAAuB,IAAtBC,EAAqB,EAArBA,KAAMC,EAAe,EAAfA,MAAMC,EAAS,EAATA,GAC1B,OACM,sBAAKC,UAAU,6CAAf,UACA,qBAAKC,IAAG,+BAA2BF,EAA3B,WAAwCG,IAAI,WACpD,gCACE,+BAAKL,EAAL,OACA,8BAAIC,EAAJ,cCYMK,EAjBE,SAAC,GAAgB,IAAdC,EAAa,EAAbA,OACnB,OACG,8BAEGA,EAAOC,KAAI,SAACC,EAAKC,GACvB,OACA,cAAC,EAAD,CAEAR,GAAIK,EAAOG,GAAGR,GACXF,KAAOO,EAAOG,GAAGV,KACpBC,MAAQM,EAAOG,GAAGT,OAHbS,SCISC,EAZG,SAAC,GAAgC,EAA/BC,YAAgC,IAAnBC,EAAkB,EAAlBA,aAChC,OACC,qBAAKV,UAAW,MAAhB,SACD,uBAAOA,UAAU,mCAChBW,KAAK,SACLC,YAAY,gBACZC,SAAWH,OCEEI,EARA,SAACC,GACf,OACD,qBAAKC,MAAS,CAACC,UAAW,SAAUC,OAAQ,SAAUC,OAAQ,iBAA9D,SACCJ,EAAMK,YCgBQC,E,kDAlBV,WAAYN,GAAQ,IAAD,8BAClB,cAAMA,IACDO,MAAQ,CACZC,UAAU,GAHO,E,qDAMxB,SAAkBC,EAAOC,GACxBC,KAAKC,SAAS,CAACJ,UAAU,M,oBAI1B,WACC,OAAIG,KAAKJ,MAAMC,SACP,2DAEDG,KAAKX,MAAMK,a,GAhBQQ,aC2CZC,G,wDArCd,aAAe,IAAD,8BACb,gBAaDC,eAAiB,SAACC,GACjB,EAAKJ,SAAS,CAAClB,YAAasB,EAAMC,OAAOC,SAbzC,EAAKX,MAAQ,CACZlB,OAAQ,GACCK,YAAa,IAJV,E,qDAQf,WAAqB,IAAD,OACnByB,MAAM,8CACL5C,MAAK,SAAA6C,GAAQ,OAAIA,EAASC,UAC1B9C,MAAK,SAAA+C,GAAK,OAAI,EAAKV,SAAS,CAACvB,OAAOiC,S,oBAMrC,WAAU,IAAD,EACsBX,KAAKJ,MAA5BlB,EADC,EACDA,OAAQK,EADP,EACOA,YACT6B,EAAiBlC,EAAOmC,QAAO,SAAAC,GACpC,OAAOA,EAAM3C,KAAK4C,cAAcC,SAASjC,EAAYgC,kBAEtD,OACD,sBAAKzC,UAAU,KAAf,UACA,oBAAIA,UAAY,KAAhB,0BACA,cAAC,EAAD,CAAWU,aAAegB,KAAKI,iBAC/B,cAAC,EAAD,UACE,cAAC,EAAD,UACG,cAAC,EAAD,CAAU1B,OAASkC,e,GA7BPV,c,MCClBe,IAASC,OACP,cAAC,IAAMC,WAAP,UACK,cAAC,EAAD,MAELC,SAASC,eAAe,SAM1B5D,M","file":"static/js/main.2ffcb43a.chunk.js","sourcesContent":["const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\r\n\r\nconst Card = ({name, email,id }) => {\r\n\treturn (\r\n       <div className='bg-light-green dib br3 pa3 ma2 grow bw2 tc'>\r\n       <img src ={`https://robohash.org/${id}200x200`} alt='robots' />\r\n       <div> \r\n         <h2>{name} </h2>\r\n         <p>{email} </p> \r\n       </div>\r\n       </div>\r\n       );\r\n}\r\n\r\nexport default Card;","import React from 'react';\r\nimport Card from './Card';\r\n\r\nconst CardList = ({ robots }) => {\r\n\treturn (\r\n    <div>\r\n      { \r\n       robots.map((user,i) => {\r\n\treturn (\r\n\t<Card \r\n\tkey={i} \r\n\tid={robots[i].id}\r\n    name= {robots[i].name}\r\n\temail= {robots[i].email}/>) \r\n})\t\r\n   }\r\n    </div>\r\n\t\t);\r\n}\r\n\r\nexport default CardList;","import React from 'react';\r\n\r\nconst SearchBox = ({searchfield, searchChange}) => {\r\n\treturn (\r\n\t\t<div className= \"pa2\">\r\n\t<input className=\"pa3 ba b--green bg-lightest-blue\"\r\n\t type='search'\r\n\t placeholder='Search robots'\r\n\t onChange= {searchChange}\r\n\t  />\r\n\t  </div>\r\n\t);\r\n}\r\n\r\nexport default SearchBox","import React from 'react'\r\n\r\nconst Scroll = (props) => {\r\n\treturn (\r\n<div style = {{overflowY: 'scroll', height: \"1000px\", border: \"2px solid red\"}}> \r\n{props.children}\r\n</div>\r\n\t\t);\r\n};\r\n\r\nexport default Scroll ","import React, {Component} from 'react';\r\n\r\nclass ErrorBoundry extends Component {\r\n     constructor(props) {\r\n     \tsuper(props);\r\n     \tthis.state = {\r\n     \t\thasError: false\r\n     \t}\r\n     }\r\ncomponentDidCatch(error, info) {\r\n\tthis.setState({hasError: true})\r\n \r\n}\r\n\r\nrender() {\r\n\tif (this.state.hasError) {\r\n\t\treturn <h1> Oooops. That is not good</h1>\r\n\t} \r\n\treturn this.props.children\r\n}\r\n}\r\nexport default ErrorBoundry","import React, { Component } from 'react';\r\nimport CardList from '../components/CardList.js';\r\nimport SearchBox from '../components/SearchBox.js'\r\nimport Scroll from '../components/Scroll.js'\r\nimport ErrorBoundry from '../components/ErrorBoundry.js'\r\nimport './App.css'\r\n\r\nclass App extends Component {\r\n\tconstructor() {\r\n\t\tsuper()\r\n\t\tthis.state = {\r\n\t\t\trobots: [],\r\n            searchfield: ''\r\n\t\t}\r\n\t}\r\n\r\ncomponentDidMount() {\r\n\tfetch('https://jsonplaceholder.typicode.com/users')\r\n\t.then(response => response.json())\r\n\t.then(users => this.setState({robots:users}));\r\n}\r\n\r\n\tonSearchChange = (event) => {\r\n\t\tthis.setState({searchfield: event.target.value })\r\n\t}\r\n\trender() {\r\n\t\tconst {robots, searchfield} = this.state;\r\n\t\tconst filteredRobots = robots.filter(robot => {\r\n\t\t\treturn robot.name.toLowerCase().includes(searchfield.toLowerCase());\r\n\t\t}) \r\n\t\treturn (\r\n <div className=\"tc\">\r\n\t<h1 className = 'f1'>Robofriends </h1>\r\n\t<SearchBox searchChange= {this.onSearchChange} />\r\n\t<Scroll>\r\n\t  <ErrorBoundry>\r\n\t     <CardList robots= {filteredRobots}/>\r\n\t  </ErrorBoundry>\r\n\t</Scroll>\r\n </div>\r\n\t);\r\n\t}\r\n\t\r\n}\r\n\r\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport reportWebVitals from './reportWebVitals';\nimport App from './containers/App'\nimport 'tachyons';\nimport {robots} from './robots'\n\nReactDOM.render(\n  <React.StrictMode>\n       <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}